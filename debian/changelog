liesel (11.3) focal; urgency=low

  * Liesel can now compile on MacOS

 -- rail5 <andrew@rail5.org>  Tue, 15 Nov 2022 16:55:33 -0500

liesel (11.2) focal; urgency=low

  * Patched a bug in export preview

 -- rail5 <andrew@rail5.org>  Thu, 31 Mar 2022 17:50:13 -0400

liesel (11.1) focal; urgency=low

  * Patched a series of bugs listed on github
  Average execution sped up as a result, using libHaru
  to write the output PDFs. Also as a result, Liesel
  no longer cross-compiles to Windows

 -- rail5 <andrew@rail5.org>  Tue, 8 Mar 2022 01:08:40 -0500

liesel (11.0) focal; urgency=low

  * Added new -N feature, which applies requested changes
  but does not make a booklet
  Dramatically restructured the code to be more object-oriented
  to make for easier changes in the future
  Patched a few bugs along the way

 -- rail5 <andrew@rail5.org>  Sun, 30 Jan 2022 19:32:22 -0500

liesel (10.1) focal; urgency=low

  * Shipping previous change
  Also added a manpage entry for -B

 -- rail5 <andrew@rail5.org>  Fri, 28 Jan 2022 00:53:31 -0500

liesel (10.1~alpha1) focal; urgency=low

  * Added --output-settings longopt for -B
  Added -B entry to help menu
  -B now outputs an XML table

 -- rail5 <andrew@rail5.org>  Thu, 27 Jan 2022 22:06:48 -0500

liesel (10.0) focal; urgency=low

  * v10.0 release
  Added longopts support for easier use
  Added option to receive PDF from STDIN (-I / --stdin)
  And option to output PDF to STDOUT (-O / --stdout)

 -- rail5 <andrew@rail5.org>  Sun, 23 Jan 2022 23:39:12 -0500

liesel (9.0) focal; urgency=low

  * v9.0 release
  Added -a 'auto margin' feature
  progressively widens center-margins
  (the space between the left and right-hand pages)
  towards the middle of the booklet,
  so that those margins are wider in the middle,
  and narrower at the ends
  primarily for use in printing very large booklets
  Added undocumented -B 'bookthief extra' option
  outputs a newline-delimited list of user-provided options
  used for BookThief's new 'import command' feature
  Separated native-nix compilation and windows cross-compilation
  in the makefile

 -- rail5 <andrew@rail5.org>  Sat, 1 Jan 2022 22:01:17 -0500

liesel (8.1) focal; urgency=low

  * Cleaned up the code a bit
  Organized includes/functions
  Attempted to make the code easier to navigate
  Slightly re-structured main() function to remove
  unnecessary conditionals

 -- rail5 <andrew@rail5.org>  Fri, 31 Dec 2021 01:19:42 -0500

liesel (8.0) focal; urgency=low

  * v8.0 release
  Added -k 'color threshold' feature
  converts the PDF into pure black-and-white
  with a given 'threshold' value
  useful for handling scanned PDFs with yellowed pages
  Added -w 'widen center margins' feature
  adds blank space between the left and right-hand pages
  Added -C 'crop' feature
  crops input pages according to specified values
  specified as -C 10,20,30,40
  in the order left,right,top,bottom
  Added -D 'divide pages' feature
  divides each page of the input PDF into two pages
  useful for handling PDFs of scanned books where they
  scanned two pages at a time and didn't separate them
  for you
  Added -e 'export preview JPEG' function
  exports a preview of 2 (combined) pages to check before
  running the full command
  Used as liesel -i input.pdf -e 5,6 -o output.jpeg
  Found and patched a bug in the has_ending() function
  Was previously case-sensitive, and so would reject
  input files where .pdf was written in alternate cases
  for example, as .PDF or .Pdf

 -- rail5 <andrew@rail5.org>  Sat, 25 Dec 2021 18:26:08 -0500

liesel (7.2.1) focal; urgency=low

  * Found and patched two bugs
  Page '0' was permissible input (-r function) in some cases
  and would of course crash the program
  That's now patched
  iswritable() check failed on NULL paths
  if, for example, the user is outputting to a file in the
  current working directory and therefore doesn't specify
  That's now patched as well

 -- rail5 <andrew@rail5.org>  Wed, 22 Dec 2021 04:53:33 -0500

liesel (7.2) focal; urgency=low

  * Liesel can now also be cross-compiled
  to a fully-functioning Windows binary
  Next step is to modify a thing or two in the BookThief GUI
  Pascal of course is made for cross-compilation, but the
  TProc that's supposed to spawn Liesel has given
  some trouble on Windows, and I don't understand Windows
  well enough to know why just yet

 -- rail5 <andrew@rail5.org>  Mon, 20 Dec 2021 04:32:17 -0500

liesel (7.1.2) focal; urgency=low

  * Patched that bug in the filesystem permissions checking
  Hadn't realized that the unistd access(path, W_OK) checked
  not only whether the path was writable (as it seemed to me
  from the docs) but also returned a failure if the specified
  file didn't already exist. To my mind those are two distinct
  checks. In fact, access() has another, completely distinct method,
  access(path, F_OK) which the docs say is for checking
  whether the file exists. At any rate, bool iswritable() now
  isolates the path from the filename to avoid that error.

 -- rail5 <andrew@rail5.org>  Sun, 19 Dec 2021 03:11:08 -0500

liesel (7.1.1) focal; urgency=low

  * Rolled back the previous update due to
  unforeseen bugs in the filesystem permissions checking
  A lot of testing will be done and then a
  working version will be implemented later

 -- rail5 <andrew@rail5.org>  Fri, 17 Dec 2021 22:49:40 -0500

liesel (7.1) focal; urgency=low

  * Liesel now checks that the output path is actually writable
  before going ahead. I can't believe this hadn't come up already.
  The part of the code dealing with range-printing was also
  cleaned up slightly.

 -- rail5 <andrew@rail5.org>  Fri, 17 Dec 2021 22:17:12 -0500

liesel (7.0) focal; urgency=low

  * v7.0 Release
  Updated -r range function to accept multiple ranges
  in the format -r 1-4,10-13,20-30
  Updated -r range function to accept "backwards" descending ranges
  and single-page "ranges" (ie, -r 10-1 and -r 1,2,3,4,5)
  PDFs no longer need pages of all the same size, due to
  improvements in the makepamphlet() function,
  Liesel can now handle PDFs with pages of varied sizes
  Added -l landscape flipping option
  Added -V option which echoes the liesel version number
  Minsize (-m) can now also be set to values lower than 4
  Changed behavior of the progress counter
  which used to output progress percentages whenever printing in segments
  regardless of whether the user specified the -b option
  Now, of course, it only outputs progress when -b is specified
  Found and patched a bug in the maybrescale() function where -d
  pixels-per-inch value was not previously preserved

 -- rail5 <andrew@rail5.org>  Thu, 16 Dec 2021 21:04:59 -0500

liesel (6.0.1) focal; urgency=low

  * Updated runtime dependency list

 -- rail5 <andrew@rail5.org>  Wed, 15 Dec 2021 08:46:17 -0500

liesel (6.0) focal; urgency=low

  * v6.0 Release
  Liesel is lightning-fast now
  Replaced PoDoFo with Poppler
  Replaced Magick++ load function with Poppler's,
  which then passes raw pixel data to Magick++ Image class
  for further processing.
  in doing so, average full-program execution has been
  sped up by an average of 408%
  and no, that's not an exaggeration
  Improvements made to the progress counter
  A few explanatory comments added throughout the code

 -- rail5 <andrew@rail5.org>  Tue, 14 Dec 2021 00:32:22 -0500

liesel (5.2.3) focal; urgency=low

  * More improvements in memory management
  Change to makepamphlet() function now clears
  more unneeded memory after use, reducing
  peak memory usage by an average of fifty percent

 -- rail5 <andrew@rail5.org>  Sat, 11 Dec 2021 22:42:33 -0500

liesel (5.2.2) focal; urgency=low

  * Found and patched major bug
  Memory-unsafe strcat() in init switch statement
  in case -o caused some trouble
  If provided output file did not end in .pdf,
  strcat() appended .pdf to it
  In doing so, it overwrote the following 4 bytes in memory
  This meant that if any args came after -o
  For instance, liesel -i file.pdf -o newfile.pdf -c
  Or, liesel -i file.pdf -o newfile.pdf -r 1-12
  Those arguments would have their first 4 bytes removed
  Ie, it would cut off -c entirely,
  or in the second example, ... -o newfile.pdf-12
  This has been patched by removing that check from the switch statement
  And moving it further down, also replacing the
  Memory-unsafe C-string operations
  with C++ counterparts
  It wouldn't have been so bad, except that I just spent
  several days of my life rewriting the BookThief GUI
  in FreePascal, thinking that there was some
  mysterious problem with the GUI or wxWidgets
  before realizing what the issue was
  Oh well, c'est la vie
  In other news, a new BookThief GUI in FreePascal
  may or may not be coming soon

 -- rail5 <andrew@rail5.org>  Mon, 6 Dec 2021 05:56:03 -0500

liesel (5.2.1) focal; urgency=low

  * Fixed typo in runtime dependencies

 -- rail5 <andrew@rail5.org>  Thu, 2 Dec 2021 00:33:12 -0500

liesel (5.2) focal; urgency=low

  * Added -m minimum segment size option
  was previously hardcoded to 4
  now defaults to 4, but can be overrided with -m
  Liesel now clears unneeded memory early for better performance
  in segmented printing, vectors for loaded pages previously
  did not clear until they were overwritten
  this led to considerable RAM usage beyond the point where
  that RAM usage was necessary
  now, that memory is cleared ASAP
  Replaced C string functions with C++ equivalents for consistency in code
  Error messages now piped to cerr rather than cout

 -- rail5 <andrew@rail5.org>  Wed, 1 Dec 2021 21:24:39 -0500

liesel (5.1.1) focal; urgency=low

  * Patched divide-by-zero bug
  in progress counter

 -- rail5 <andrew@rail5.org>  Tue, 5 Oct 2021 22:57:30 -0400

liesel (5.1) focal; urgency=low

  * Added option for custom -t sizes
  to be specified in inchesXinches
  In so doing, also improved efficiency
  in handling the transform presets
  which were already in place

 -- rail5 <andrew@rail5.org>  Thu, 30 Sep 2021 17:56:12 -0400

liesel (5.0.3) focal; urgency=low

  * Patched bug resulting from oversight
  Formerly, all rescales assumed 100 PPI
  But the -d option allows the user to change
  The document PPI resolution
  This would have meant that documents with
  A PPI that was not a multiple of 100
  (For example, liesel -d 175)
  Would not rescale properly
  The mayberescale() function now checks
  The PPI before rescaling

 -- rail5 <andrew@rail5.org>  Wed, 29 Sep 2021 15:42:07 -0400

liesel (5.0.2) focal; urgency=low

  * Changed minimum -d value to 75
  Values lower than 75 are prone to errors
  But, since 75 is possible, then if the
  user wants it, why not allow it

 -- rail5 <andrew@rail5.org>  Mon, 20 Sep 2021 21:00:12 -0400

liesel (5.0.1) focal; urgency=low

  * Added manpage
  Fixed minor cosmetic error in verbose mode

 -- rail5 <andrew@rail5.org>  Fri, 17 Sep 2021 04:13:32 -0400

liesel (5.0) focal; urgency=low

  * Added -d pixel density option
  Allows the user to adjust quality
  in terms of pixels per inch
  with a 100 ppi minimum
  Added -t transform option
  Accepts us-letter and a4 as arguments
  Auto-resizes the output PDF to conform
  to those dimensions if requested

 -- rail5 <andrew@rail5.org>  Thu, 16 Sep 2021 20:15:38 -0400

liesel (4.9.1) focal; urgency=low

  * Minor update, updated -h help string

 -- rail5 <andrew@rail5.org>  Wed, 1 Sep 2021 20:15:15 -0400

liesel (4.9) focal; urgency=low

  * Added -v Verbose option
  Added -b BookThief machine-readable option
  Like Verbose -v, can also be used in conjunction
  with -v, but rather than English, it prints
  a percentage done, which BT then uses to update
  a progress bar.
  Cleaned up the code in general (inconsistencies,
  etc oversights which didn't produce errors, but
  nevertheless could stand to be cleaned up)

 -- rail5 <andrew@rail5.org>  Wed, 1 Sep 2021 17:51:38 -0400

liesel (4.0) focal; urgency=low

  * Added features: -q and -f
  -q displays program and copyright info
  -f forces overwrites, does not warn user
  about existing files.
  Bug patched: added infile sanity check
  to -p command.
  Bug patched: Swapped order of outfile
  sanity checks.
  Bug patched: outfile sanity checks now
  include -part1.pdf, -part2.pdf, etc
  if printing in segments.
  Improvement: Liesel now appends
  blank pages to the end of the output booklet
  in the case that the total number of pages
  is not divisible by 4, where before, any
  printer would place those blanks in the
  middle of the printed booklet.
  Improvement: Liesel is now more efficient
  in appending blanks when necessary

 -- rail5 <andrew@rail5.org>  Mon, 23 Aug 2021 20:01:13 -0400

liesel (3.0) focal; urgency=low

  * Added features: -s and -c
  -s prints the PDF in segments of given size
  as in, -s 40, for 40-page segments
  this produces multiple PDFs
  -c checks the validity of a given command
  but does not execute it.
  Patched a minor bug in -r range values.
  Moved infile/outfile sanity checks to be
  within init switch statement.
  Moved all functions to separate inc files

 -- rail5 <andrew@rail5.org>  Tue, 17 Aug 2021 14:45:12 -0400


liesel (2.2) focal; urgency=low

  * Included libfontconfig1-dev in build-deps

 -- rail5 <andrew@rail5.org>  Sat, 14 Aug 2021 17:20:02 -0400

liesel (2.1) focal; urgency=low

  * Patched a silly bug in the build dependencies

 -- rail5 <andrew@rail5.org>  Sat, 14 Aug 2021 16:59:32 -0400

liesel (2.0) focal; urgency=low

  * Liesel has been entirely rewritten to improve performance
  Longopts are no longer supported
  Apart from that, everything here is backwards-compatible

 -- rail5 <andrew@rail5.org>  Sat, 14 Aug 2021 15:31:01 -0400

liesel (1.0) focal; urgency=low

  * Initial release

 -- rail5 <andrew@rail5.org>  Wed, 4 Aug 2021 18:13:09 -0400
